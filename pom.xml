<?xml version="1.0" encoding="UTF-8"?>
<!--
================================================================================
Copyright (c) 2016-2019 AT&T Intellectual Property. All rights reserved.
================================================================================
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
============LICENSE_END=========================================================

ECOMP is a trademark and service mark of AT&T Intellectual Property.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.onap.oparent</groupId>
        <artifactId>oparent</artifactId>
        <version>2.0.0</version>
    </parent>


    <groupId>org.onap.dcaegen2.platform</groupId>
    <artifactId>servicechange-handler</artifactId>
    <version>1.3.1-SNAPSHOT</version>
    <!-- Not sure why clojure-maven-plugin says packaging should be "clojure" -->
    <packaging>jar</packaging>

    <!-- This maybe an issue -->
    <repositories>
        <repository>
            <id>clojars.org</id>
            <url>http://clojars.org/repo</url>
        </repository>
        <!-- TODO: Fill in the onap maven repository info -->
    </repositories>

    <properties>
        <maven.build.timestamp.format>yyyyMMdd'T'HHmmss'Z'</maven.build.timestamp.format>
        <nexusproxy>https://nexus.onap.org</nexusproxy>
        <snapshots.path>content/repositories/snapshots/</snapshots.path>
        <releases.path>content/repositories/releases/</releases.path>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.clojure</groupId>
            <artifactId>clojure</artifactId>
            <version>1.8.0</version>
        </dependency>
        <dependency>
            <groupId>cheshire</groupId>
            <artifactId>cheshire</artifactId>
            <version>5.8.0</version>
        </dependency>
        <dependency>
            <groupId>com.draines</groupId>
            <artifactId>postal</artifactId>
            <version>2.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.onap.sdc.sdc-distribution-client</groupId>
            <artifactId>sdc-distribution-client</artifactId>
            <version>1.3.0</version>
        </dependency>
        <dependency>
            <groupId>org.clojure</groupId>
            <artifactId>tools.logging</artifactId>
            <version>0.4.0</version>
        </dependency>
        <dependency>
            <groupId>clj-http</groupId>
            <artifactId>clj-http</artifactId>
            <version>3.3.0</version>
        </dependency>
        <dependency>
            <groupId>org.bovinegenius</groupId>
            <artifactId>exploding-fish</artifactId>
            <version>0.3.4</version>
        </dependency>
        <dependency>
            <groupId>clj-yaml</groupId>
            <artifactId>clj-yaml</artifactId>
            <version>0.4.0</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
                <version>1.2.1</version>
        </dependency>
        <dependency>
            <groupId>clj-fakes</groupId>
            <artifactId>clj-fakes</artifactId>
            <version>0.9.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- Needed for the clojure plugin to point to the tests directory. Didn't work as
             a configuration option under the clojure plugin -->
        <testSourceDirectory>test</testSourceDirectory>

        <plugins>
            <!-- This seems to be the only place to specify the application entrypoint -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>sch.core</mainClass>
                            <classpathPrefix>dependency</classpathPrefix>
                        </manifest>
                    </archive>
                    <finalName>${project.artifactId}</finalName>
                </configuration>
            </plugin>
            <!-- Used to copy in the dependencies when packaging JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Explicitly use a certain version of Java. May not be needed -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.theoryinpractise</groupId>
                <artifactId>clojure-maven-plugin</artifactId>
                <version>1.8.1</version>
                <extensions>true</extensions>
                <configuration>
                    <sourceDirectories>
                        <sourceDirectory>src</sourceDirectory>
                    </sourceDirectories>
                    <mainClass>sch.core</mainClass>
                </configuration>
                <executions>
                  <execution>
                      <id>compile</id>
                      <phase>compile</phase>
                      <goals>
                          <goal>compile</goal>
                      </goals>
                  </execution>
                  <execution>
                      <id>test</id>
                      <phase>test</phase>
                      <goals>
                          <goal>test</goal>
                      </goals>
                  </execution>
                </executions>
            </plugin>

            <!-- Package an Uber jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.3</version>
                <executions>
                    <!-- Run shade goal on package phase -->
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <!-- NOTE: Need the following transformer else gets "Could not resolve type id 'https' into a subtype" error
                                Solution found from here:
                                http://stackoverflow.com/questions/27543060/why-does-dropwizard-configuration-is-not-working
                                Some more context here:
                                https://github.com/dropwizard/dropwizard/issues/455 -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <!-- add Main-Class to manifest file -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>sch.core</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <maintainer>Michael Hwang</maintainer>
                    <imageName>${onap.nexus.dockerregistry.daily}/onap/${project.groupId}.${project.artifactId}</imageName>
                    <imageTags>
                        <imageTag>${project.version}-${maven.build.timestamp}Z</imageTag>
                        <imageTag>${project.version}</imageTag>
                        <imageTag>latest</imageTag>
                    </imageTags>
                    <baseImage>openjdk:8-jre-alpine</baseImage>
                    <user>sch</user>
                    <runs>
                        <run>apk update</run>
                        <run>apk add bash</run>
                        <run>chmod 666 /etc/ssl/certs/java/cacerts</run>
                        <run>addgroup -S sch</run>
                        <run>adduser -S -G sch sch</run>
                    </runs>
                    <!-- NOTE: Couldn't figure out how to package the jar to be named: ${project.build.finalName}. This might be
                            because of the clojure maven plugin -->
                    <cmd>["sch.sh"]</cmd>
                    <!-- copy the service's jar file from target into the root directory of the image -->
                    <resources>
                        <resource>
                            <targetPath>/opt</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>servicechange-handler.jar</include>
                        </resource>
                        <resource>
                            <targetPath>/opt</targetPath>
                            <directory>${project.basedir}/resources</directory>
                            <include>health.sh</include>
                            <include>sch.sh</include>
                        </resource>
                    </resources>
                    <exposes>
                        <!-- This is an unused exposed port to be used just so registrator registers service change handler -->
                        <expose>8079</expose>
                    </exposes>
                    <serverId>${onap.nexus.dockerregistry.daily}</serverId>
                </configuration>
            </plugin>

            <!-- Added in support for sonar but sonar doesn't support Clojure so there's no
                 point -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.2</version>
            </plugin>

        </plugins>
    </build>
</project>
